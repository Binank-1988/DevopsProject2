pipeline {
    agent any

    environment {
        KUBECTL = '/usr/local/bin/kubectl'
        AWS_DEFAULT_REGION = 'ap-south-1'
    }

    parameters {
        string(name: 'CLUSTER_NAME', defaultValue: 'amazon-prime-cluster', description: 'Enter your EKS cluster name')
    }

    stages {
        stage("Deploy to EKS") {
            steps {
                script {
                    withCredentials([
                        string(credentialsId: 'access-key', variable: 'AWS_ACCESS_KEY_ID'),
                        string(credentialsId: 'secret-key', variable: 'AWS_SECRET_ACCESS_KEY')
                    ]) {
                        // Login to EKS
                        sh """
                          aws sts get-caller-identity
                          aws eks --region ${env.AWS_DEFAULT_REGION} update-kubeconfig --name ${params.CLUSTER_NAME}
                        """

                        // Configure Prometheus & Grafana
                        sh """
                        helm repo add stable https://charts.helm.sh/stable || true
                        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts || true
                        
                        if kubectl get namespace prometheus > /dev/null 2>&1; then
                            helm upgrade stable prometheus-community/kube-prometheus-stack -n prometheus
                        else
                            kubectl create namespace prometheus
                            helm install stable prometheus-community/kube-prometheus-stack -n prometheus
                        fi

                        kubectl patch svc stable-kube-prometheus-sta-prometheus -n prometheus -p '{"spec": {"type": "LoadBalancer"}}'
                        kubectl patch svc stable-grafana -n prometheus -p '{"spec": {"type": "LoadBalancer"}}'
                        """

                        // Configure ArgoCD
                        sh """
                        kubectl create namespace argocd || true
                        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
                        kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
                        """
                    }
                }
            }
        }
    }
}
